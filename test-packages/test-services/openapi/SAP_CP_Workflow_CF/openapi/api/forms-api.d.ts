/**
 * Workflow API for Cloud Foundry
 * This API uses the SAP Cloud Platform Workflow service. With the API, you can, for example, start new workflow instances and work with tasks.  Note (relevant only for SAP API Business Hub): For authentication purposes, the API uses OAuth 2.0 security (with JSON Web Token, JWT). Thus, \"Try Out\" only works with an explicitly configured environment. For more information on how to obtain the necessary parameters, please see [Determine Service Configuration Parameters](https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/abb1f66b2c3b4983b6b656654cfc3d2b.html) in the documentation. The OAuth client you use must have [extended scopes](https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/baf2847f6d1c401a83ca3a1427b8ff84.html).  Note: These APIs are designed for loosely coupled clients. This means:  - If workflow service adds fields to responses, the API version number does not increase. Your client must ignore new fields. - The order of fields in responses and of entries in arrays may change. This applies unless the API provides an explicit means to specify the desired order.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { FormMetadata } from '../model';
import { FormModel } from '../model';
/**
 * FormsApi - axios parameter creator
 * @export
 */
export declare const FormsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Undeploys all versions of an existing form.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: FORM_DEFINITION_UNDEPLOY
     * @summary Delete a form.
     * @param {string} formId The ID of the form you want to undeploy. The ID is at most 255 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdDelete: (formId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the form model with the specified form ID and revision.  Roles permitted to execute this operation:  - Global roles (retrieve start and task forms): WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Global roles (retrieve start forms only): WorkflowInitiator  - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and revision.
     * @param {string} formId The ID of the form for which the model should be retrieved.
     * @param {string} revisionId The revision of the form for which the model should be retrieved.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdRevisionsRevisionIdModelGet: (formId: string, revisionId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the model of the specified version of the specified form definition.    Roles permitted to execute this operation:   - Global roles: WorkflowViewer, WorkflowAdmin, WorkflowDeveloper   - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and version number.
     * @param {string} formId The form ID for which the model should be retrieved. The form definition ID is at most 255 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdVersionsVersionNumberModelGet: (formId: string, versionNumber: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves a list of the latest version of each revision of each deployed form definition. The request can be parameterized.  The results are sorted by the \'createdAt\' attribute in descending order.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: FORM_DEFINITION_GET
     * @summary Retrieve all form definitions
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the form definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {'start' | 'task'} [type] Specify whether the response should be filtered by the form type. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsGet: ($skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, type?: "start" | "task" | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * FormsApi - functional programming interface
 * @export
 */
export declare const FormsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Undeploys all versions of an existing form.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: FORM_DEFINITION_UNDEPLOY
     * @summary Delete a form.
     * @param {string} formId The ID of the form you want to undeploy. The ID is at most 255 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdDelete(formId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Retrieves the form model with the specified form ID and revision.  Roles permitted to execute this operation:  - Global roles (retrieve start and task forms): WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Global roles (retrieve start forms only): WorkflowInitiator  - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and revision.
     * @param {string} formId The ID of the form for which the model should be retrieved.
     * @param {string} revisionId The revision of the form for which the model should be retrieved.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdRevisionsRevisionIdModelGet(formId: string, revisionId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<FormModel>>;
    /**
     * Retrieves the model of the specified version of the specified form definition.    Roles permitted to execute this operation:   - Global roles: WorkflowViewer, WorkflowAdmin, WorkflowDeveloper   - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and version number.
     * @param {string} formId The form ID for which the model should be retrieved. The form definition ID is at most 255 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdVersionsVersionNumberModelGet(formId: string, versionNumber: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<FormModel>>;
    /**
     * Retrieves a list of the latest version of each revision of each deployed form definition. The request can be parameterized.  The results are sorted by the \'createdAt\' attribute in descending order.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: FORM_DEFINITION_GET
     * @summary Retrieve all form definitions
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the form definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {'start' | 'task'} [type] Specify whether the response should be filtered by the form type. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsGet($skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, type?: "start" | "task" | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<FormMetadata>>>;
};
/**
 * FormsApi - factory interface
 * @export
 */
export declare const FormsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Undeploys all versions of an existing form.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: FORM_DEFINITION_UNDEPLOY
     * @summary Delete a form.
     * @param {string} formId The ID of the form you want to undeploy. The ID is at most 255 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdDelete(formId: string, options?: any): AxiosPromise<void>;
    /**
     * Retrieves the form model with the specified form ID and revision.  Roles permitted to execute this operation:  - Global roles (retrieve start and task forms): WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Global roles (retrieve start forms only): WorkflowInitiator  - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and revision.
     * @param {string} formId The ID of the form for which the model should be retrieved.
     * @param {string} revisionId The revision of the form for which the model should be retrieved.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdRevisionsRevisionIdModelGet(formId: string, revisionId: string, options?: any): AxiosPromise<FormModel>;
    /**
     * Retrieves the model of the specified version of the specified form definition.    Roles permitted to execute this operation:   - Global roles: WorkflowViewer, WorkflowAdmin, WorkflowDeveloper   - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and version number.
     * @param {string} formId The form ID for which the model should be retrieved. The form definition ID is at most 255 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsFormIdVersionsVersionNumberModelGet(formId: string, versionNumber: string, options?: any): AxiosPromise<FormModel>;
    /**
     * Retrieves a list of the latest version of each revision of each deployed form definition. The request can be parameterized.  The results are sorted by the \'createdAt\' attribute in descending order.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: FORM_DEFINITION_GET
     * @summary Retrieve all form definitions
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the form definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {'start' | 'task'} [type] Specify whether the response should be filtered by the form type. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    v1FormsGet($skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, type?: "start" | "task" | undefined, options?: any): AxiosPromise<Array<FormMetadata>>;
};
/**
 * FormsApi - object-oriented interface
 * @export
 * @class FormsApi
 * @extends {BaseAPI}
 */
export declare class FormsApi extends BaseAPI {
    /**
     * Undeploys all versions of an existing form.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: FORM_DEFINITION_UNDEPLOY
     * @summary Delete a form.
     * @param {string} formId The ID of the form you want to undeploy. The ID is at most 255 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormsApi
     */
    v1FormsFormIdDelete(formId: string, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves the form model with the specified form ID and revision.  Roles permitted to execute this operation:  - Global roles (retrieve start and task forms): WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Global roles (retrieve start forms only): WorkflowInitiator  - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and revision.
     * @param {string} formId The ID of the form for which the model should be retrieved.
     * @param {string} revisionId The revision of the form for which the model should be retrieved.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormsApi
     */
    v1FormsFormIdRevisionsRevisionIdModelGet(formId: string, revisionId: string, options?: any): Promise<import("axios").AxiosResponse<FormModel>>;
    /**
     * Retrieves the model of the specified version of the specified form definition.    Roles permitted to execute this operation:   - Global roles: WorkflowViewer, WorkflowAdmin, WorkflowDeveloper   - Scope: FORM_DEFINITION_GET_MODEL
     * @summary Retrieve form model by ID and version number.
     * @param {string} formId The form ID for which the model should be retrieved. The form definition ID is at most 255 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormsApi
     */
    v1FormsFormIdVersionsVersionNumberModelGet(formId: string, versionNumber: string, options?: any): Promise<import("axios").AxiosResponse<FormModel>>;
    /**
     * Retrieves a list of the latest version of each revision of each deployed form definition. The request can be parameterized.  The results are sorted by the \'createdAt\' attribute in descending order.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: FORM_DEFINITION_GET
     * @summary Retrieve all form definitions
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the form definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {'start' | 'task'} [type] Specify whether the response should be filtered by the form type. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FormsApi
     */
    v1FormsGet($skip?: number, $top?: number, $inlinecount?: 'allpages' | 'none', type?: 'start' | 'task', options?: any): Promise<import("axios").AxiosResponse<FormMetadata[]>>;
}
//# sourceMappingURL=forms-api.d.ts.map