/**
 * Workflow API for Cloud Foundry
 * This API uses the SAP Cloud Platform Workflow service. With the API, you can, for example, start new workflow instances and work with tasks.  Note (relevant only for SAP API Business Hub): For authentication purposes, the API uses OAuth 2.0 security (with JSON Web Token, JWT). Thus, \"Try Out\" only works with an explicitly configured environment. For more information on how to obtain the necessary parameters, please see [Determine Service Configuration Parameters](https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/abb1f66b2c3b4983b6b656654cfc3d2b.html) in the documentation. The OAuth client you use must have [extended scopes](https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/baf2847f6d1c401a83ca3a1427b8ff84.html).  Note: These APIs are designed for loosely coupled clients. This means:  - If workflow service adds fields to responses, the API version number does not increase. Your client must ignore new fields. - The order of fields in responses and of entries in arrays may change. This applies unless the API provides an explicit means to specify the desired order.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { SampleContext } from '../model';
import { WorkflowDefinition } from '../model';
import { WorkflowDefinitionVersion } from '../model';
import { WorkflowModel } from '../model';
/**
 * WorkflowDefinitionsApi - axios parameter creator
 * @export
 */
export declare const WorkflowDefinitionsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Undeploys all versions of an existing workflow definition and deletes the corresponding workflow instances. Once the undeployment has started, you can no longer start a new workflow instance based on this workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: WORKFLOW_DEFINITION_UNDEPLOY
     * @summary Delete workflow definition
     * @param {string} definitionId The ID of the workflow definition to be undeployed. The ID is at most 64 characters long.
     * @param {boolean} [cascade] Whether the undeployment of the workflow definition deletes active workflow instances. If the parameter is false or not specified and there are active workflow instances for the specified workflow definition,  the undeployment is rejected. An instance is considered active if it is in status RUNNING, ERRONEOUS, or SUSPENDED.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteV1WorkflowDefinitionsByDefinitionId: (definitionId: string, cascade?: boolean | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves a list of the latest version of each deployed workflow definition. The request can be parameterized.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all workflow definitions
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitions: ($orderby?: "createdAt asc" | "createdAt desc" | "id asc" | "id desc" | "id" | "createdAt" | "version" | "version asc" | "version desc" | "name" | "name asc" | "name desc" | "createdBy" | "createdBy asc" | "createdBy desc" | undefined, $skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:   WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which the latest version should be retrieved. The ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsByDefinitionId: (definitionId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the model of the latest version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID
     * @param {string} definitionId The workflow definition ID for which the latest model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsModelByDefinitionId: (definitionId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the default start context of the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsSampleContextsDefaultStartContextByDefinitionId: (definitionId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves a list of all deployed versions of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all versions of workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which all versions should be retrieved. The ID is at most 64 characters long.
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definition versions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsByDefinitionId: (definitionId: string, $orderby?: "createdAt asc" | "createdAt desc" | "id asc" | "id desc" | "id" | "createdAt" | "version" | "version asc" | "version desc" | "name" | "name asc" | "name desc" | "createdBy" | "createdBy asc" | "createdBy desc" | undefined, $skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID and version number
     * @param {string} definitionId The ID of the workflow definition which should be retrieved. The ID is at most 64 characters long.
     * @param {string} versionNumber The version number of the workflow definition that should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsByDefinitionIdAndVersionNumber: (definitionId: string, versionNumber: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the model of the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID and version number
     * @param {string} definitionId The workflow definition ID for which the model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsModelByDefinitionIdAndVersionNumber: (definitionId: string, versionNumber: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the default start context of the specified version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID and version number
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the default start context should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsSampleContextsDefaultStartContextByDefinitionIdAndVersionNumber: (definitionId: string, versionNumber: string, options?: any) => Promise<RequestArgs>;
};
/**
 * WorkflowDefinitionsApi - functional programming interface
 * @export
 */
export declare const WorkflowDefinitionsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Undeploys all versions of an existing workflow definition and deletes the corresponding workflow instances. Once the undeployment has started, you can no longer start a new workflow instance based on this workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: WORKFLOW_DEFINITION_UNDEPLOY
     * @summary Delete workflow definition
     * @param {string} definitionId The ID of the workflow definition to be undeployed. The ID is at most 64 characters long.
     * @param {boolean} [cascade] Whether the undeployment of the workflow definition deletes active workflow instances. If the parameter is false or not specified and there are active workflow instances for the specified workflow definition,  the undeployment is rejected. An instance is considered active if it is in status RUNNING, ERRONEOUS, or SUSPENDED.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteV1WorkflowDefinitionsByDefinitionId(definitionId: string, cascade?: boolean | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Retrieves a list of the latest version of each deployed workflow definition. The request can be parameterized.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all workflow definitions
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitions($orderby?: "createdAt asc" | "createdAt desc" | "id asc" | "id desc" | "id" | "createdAt" | "version" | "version asc" | "version desc" | "name" | "name asc" | "name desc" | "createdBy" | "createdBy asc" | "createdBy desc" | undefined, $skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<WorkflowDefinition>>>;
    /**
     * Retrieves the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:   WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which the latest version should be retrieved. The ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsByDefinitionId(definitionId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<WorkflowDefinition>>;
    /**
     * Retrieves the model of the latest version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID
     * @param {string} definitionId The workflow definition ID for which the latest model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsModelByDefinitionId(definitionId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<WorkflowModel>>;
    /**
     * Retrieves the default start context of the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsSampleContextsDefaultStartContextByDefinitionId(definitionId: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SampleContext>>;
    /**
     * Retrieves a list of all deployed versions of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all versions of workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which all versions should be retrieved. The ID is at most 64 characters long.
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definition versions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsByDefinitionId(definitionId: string, $orderby?: "createdAt asc" | "createdAt desc" | "id asc" | "id desc" | "id" | "createdAt" | "version" | "version asc" | "version desc" | "name" | "name asc" | "name desc" | "createdBy" | "createdBy asc" | "createdBy desc" | undefined, $skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<WorkflowDefinitionVersion>>>;
    /**
     * Retrieves the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID and version number
     * @param {string} definitionId The ID of the workflow definition which should be retrieved. The ID is at most 64 characters long.
     * @param {string} versionNumber The version number of the workflow definition that should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<WorkflowDefinitionVersion>>;
    /**
     * Retrieves the model of the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID and version number
     * @param {string} definitionId The workflow definition ID for which the model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsModelByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<WorkflowModel>>;
    /**
     * Retrieves the default start context of the specified version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID and version number
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the default start context should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsSampleContextsDefaultStartContextByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SampleContext>>;
};
/**
 * WorkflowDefinitionsApi - factory interface
 * @export
 */
export declare const WorkflowDefinitionsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Undeploys all versions of an existing workflow definition and deletes the corresponding workflow instances. Once the undeployment has started, you can no longer start a new workflow instance based on this workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: WORKFLOW_DEFINITION_UNDEPLOY
     * @summary Delete workflow definition
     * @param {string} definitionId The ID of the workflow definition to be undeployed. The ID is at most 64 characters long.
     * @param {boolean} [cascade] Whether the undeployment of the workflow definition deletes active workflow instances. If the parameter is false or not specified and there are active workflow instances for the specified workflow definition,  the undeployment is rejected. An instance is considered active if it is in status RUNNING, ERRONEOUS, or SUSPENDED.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteV1WorkflowDefinitionsByDefinitionId(definitionId: string, cascade?: boolean | undefined, options?: any): AxiosPromise<void>;
    /**
     * Retrieves a list of the latest version of each deployed workflow definition. The request can be parameterized.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all workflow definitions
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitions($orderby?: "createdAt asc" | "createdAt desc" | "id asc" | "id desc" | "id" | "createdAt" | "version" | "version asc" | "version desc" | "name" | "name asc" | "name desc" | "createdBy" | "createdBy asc" | "createdBy desc" | undefined, $skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, options?: any): AxiosPromise<Array<WorkflowDefinition>>;
    /**
     * Retrieves the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:   WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which the latest version should be retrieved. The ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsByDefinitionId(definitionId: string, options?: any): AxiosPromise<WorkflowDefinition>;
    /**
     * Retrieves the model of the latest version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID
     * @param {string} definitionId The workflow definition ID for which the latest model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsModelByDefinitionId(definitionId: string, options?: any): AxiosPromise<WorkflowModel>;
    /**
     * Retrieves the default start context of the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsSampleContextsDefaultStartContextByDefinitionId(definitionId: string, options?: any): AxiosPromise<SampleContext>;
    /**
     * Retrieves a list of all deployed versions of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all versions of workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which all versions should be retrieved. The ID is at most 64 characters long.
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definition versions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsByDefinitionId(definitionId: string, $orderby?: "createdAt asc" | "createdAt desc" | "id asc" | "id desc" | "id" | "createdAt" | "version" | "version asc" | "version desc" | "name" | "name asc" | "name desc" | "createdBy" | "createdBy asc" | "createdBy desc" | undefined, $skip?: number | undefined, $top?: number | undefined, $inlinecount?: "none" | "allpages" | undefined, options?: any): AxiosPromise<Array<WorkflowDefinitionVersion>>;
    /**
     * Retrieves the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID and version number
     * @param {string} definitionId The ID of the workflow definition which should be retrieved. The ID is at most 64 characters long.
     * @param {string} versionNumber The version number of the workflow definition that should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): AxiosPromise<WorkflowDefinitionVersion>;
    /**
     * Retrieves the model of the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID and version number
     * @param {string} definitionId The workflow definition ID for which the model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsModelByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): AxiosPromise<WorkflowModel>;
    /**
     * Retrieves the default start context of the specified version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID and version number
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the default start context should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getV1WorkflowDefinitionsVersionsSampleContextsDefaultStartContextByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): AxiosPromise<SampleContext>;
};
/**
 * WorkflowDefinitionsApi - object-oriented interface
 * @export
 * @class WorkflowDefinitionsApi
 * @extends {BaseAPI}
 */
export declare class WorkflowDefinitionsApi extends BaseAPI {
    /**
     * Undeploys all versions of an existing workflow definition and deletes the corresponding workflow instances. Once the undeployment has started, you can no longer start a new workflow instance based on this workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowTenantOperator  - Scope: WORKFLOW_DEFINITION_UNDEPLOY
     * @summary Delete workflow definition
     * @param {string} definitionId The ID of the workflow definition to be undeployed. The ID is at most 64 characters long.
     * @param {boolean} [cascade] Whether the undeployment of the workflow definition deletes active workflow instances. If the parameter is false or not specified and there are active workflow instances for the specified workflow definition,  the undeployment is rejected. An instance is considered active if it is in status RUNNING, ERRONEOUS, or SUSPENDED.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    deleteV1WorkflowDefinitionsByDefinitionId(definitionId: string, cascade?: boolean, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves a list of the latest version of each deployed workflow definition. The request can be parameterized.  Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all workflow definitions
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definitions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitions($orderby?: 'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc', $skip?: number, $top?: number, $inlinecount?: 'allpages' | 'none', options?: any): Promise<import("axios").AxiosResponse<WorkflowDefinition[]>>;
    /**
     * Retrieves the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:   WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which the latest version should be retrieved. The ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitionsByDefinitionId(definitionId: string, options?: any): Promise<import("axios").AxiosResponse<WorkflowDefinition>>;
    /**
     * Retrieves the model of the latest version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID
     * @param {string} definitionId The workflow definition ID for which the latest model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitionsModelByDefinitionId(definitionId: string, options?: any): Promise<import("axios").AxiosResponse<WorkflowModel>>;
    /**
     * Retrieves the default start context of the latest version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitionsSampleContextsDefaultStartContextByDefinitionId(definitionId: string, options?: any): Promise<import("axios").AxiosResponse<SampleContext>>;
    /**
     * Retrieves a list of all deployed versions of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve all versions of workflow definition by ID
     * @param {string} definitionId The ID of the workflow definition for which all versions should be retrieved. The ID is at most 64 characters long.
     * @param {'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc'} [$orderby] Specify the attribute you want to sort by and the order separated by a space. If the order is omitted it is ascending by default. If not specified, the results are sorted by the \&#39;createdAt\&#39; attribute in descending order.
     * @param {number} [$skip] Specify the number of records you want to skip from the beginning. You can skip at most 4000 records. To indicate a result range that starts, for example, at 1001, combine the $skip with the $top parameter. If not specified, no records are skipped. Refer also to the $top parameter.
     * @param {number} [$top] Specify the number of records you want to show. You can get at most 1000 records per API call. To indicate a result range that starts, for example, at 1001, combine the $top with the $skip parameter. If not specified, 100 records are returned. Refer also to the $skip parameter.
     * @param {'allpages' | 'none'} [$inlinecount] Specify whether the total count of the workflow definition versions should be returned as the value of the X-Total-Count response header. To enable the header, use the \&#39;allpages\&#39; setting. To disable the header, use the \&#39;none\&#39; setting. The values are case-sensitive.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitionsVersionsByDefinitionId(definitionId: string, $orderby?: 'id' | 'id asc' | 'id desc' | 'version' | 'version asc' | 'version desc' | 'name' | 'name asc' | 'name desc' | 'createdAt' | 'createdAt asc' | 'createdAt desc' | 'createdBy' | 'createdBy asc' | 'createdBy desc', $skip?: number, $top?: number, $inlinecount?: 'allpages' | 'none', options?: any): Promise<import("axios").AxiosResponse<WorkflowDefinitionVersion[]>>;
    /**
     * Retrieves the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET
     * @summary Retrieve workflow definition by ID and version number
     * @param {string} definitionId The ID of the workflow definition which should be retrieved. The ID is at most 64 characters long.
     * @param {string} versionNumber The version number of the workflow definition that should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitionsVersionsByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): Promise<import("axios").AxiosResponse<WorkflowDefinitionVersion>>;
    /**
     * Retrieves the model of the specified version of the specified workflow definition.   Roles permitted to execute this operation:  - Global roles:  WorkflowViewer, WorkflowAdmin, WorkflowDeveloper  - Scope: WORKFLOW_DEFINITION_GET_MODEL
     * @summary Retrieve workflow definition model by ID and version number
     * @param {string} definitionId The workflow definition ID for which the model should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the model should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitionsVersionsModelByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): Promise<import("axios").AxiosResponse<WorkflowModel>>;
    /**
     * Retrieves the default start context of the specified version of the specified workflow definition.  Roles permitted to execute this operation:  - Global roles:  WorkflowInitiator  - Scope: WORKFLOW_DEFINITION_GET_SAMPLE_CONTEXT
     * @summary Retrieve sample start context of workflow definition by ID and version number
     * @param {string} definitionId The workflow definition ID for which the default start context should be retrieved. The workflow definition ID is at most 64 characters long.
     * @param {string} versionNumber The version number for which the default start context should be retrieved. The version number consists of 1 - 10 digits.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WorkflowDefinitionsApi
     */
    getV1WorkflowDefinitionsVersionsSampleContextsDefaultStartContextByDefinitionIdAndVersionNumber(definitionId: string, versionNumber: string, options?: any): Promise<import("axios").AxiosResponse<SampleContext>>;
}
//# sourceMappingURL=workflow-definitions-api.d.ts.map